#!/bin/bash -e

die() { echo "$@"; exit 1; }
die_quiet() { exit 1; }

START_DIR=$(pwd)

DEB_REL="release"
BRANCH="develop"

for arg in "$@"; do
  case $arg in

    --build=*)               BUILD="${arg#*=}";    shift;;
    --branch=*)              BRANCH="${arg#*=}";   shift;;
    --debug)                 DEB_REL="debug";      shift;;
    --release)               DEB_REL="release";    shift;;

    --verbose)               verbose="1";          shift;;
    --record)                record="1";           shift;;
    --check-for-new)         check_for_new="1";    shift;;

  esac
done

case $BRANCH in
  develop)    pso_jenkins_url="http://jenkins.hp10.us/view/mario-builds/job/mario-client-ios-build/api/json"      ;;
       qa)    pso_jenkins_url="http://jenkins.hp10.us/view/mario-builds/job/mario-client-ios-build-qa/api/json"   ;;
      stg)    pso_jenkins_url="http://jenkins.hp10.us/view/mario-builds/job/mario-client-ios-build-stg/api/json"  ;;
     prod)    pso_jenkins_url="http://jenkins.hp10.us/view/mario-builds/job/mario-client-ios-build-prod/api/json" ;;
esac

if [ -n "$record" ]; then
#  echo -n "0" > "${HOME}/.prep_ios_cpl_${BRANCH}"
  test -n "$BUILD" || BUILD="latest"
fi

test -n "$check_for_new" && BUILD="latest"

if [ "$BUILD" == "latest" ]; then
  BUILD="$(curl -sL "$pso_jenkins_url" | underscore select '.lastSuccessfulBuild .number' --outfmt text)"
fi

# Check to see if the latest 'recorded' prep is what is currently the latest
if [ -n "$check_for_new" ]; then

  # If we have not ever run prep, then the latest must be new
  test -f "${HOME}/.prep_ios_cpl_${BRANCH}" || exit 0

  # If the last call to prep is the same as the latest, we return 1 (false)
  old_ver="$(cat ${HOME}/.prep_ios_cpl_${BRANCH})"
  [ "$old_ver" == "$BUILD" ] && die_quiet

  # We have both versions (old and latest), and they are different.
  exit 0
fi

test -z "$BUILD" && die "Need --build=x or --build=latest"
test -d "/tmp/"  || die "No /tmp dir???"

zip_name="mwp_sap_cpl-ios-device-${DEB_REL}_1.1-${BUILD}.zip"

cd /tmp/ && rm -rf prep-ios-cpl
mkdir -p prep-ios-cpl && cd $_

curl -sOL "http://pso-artifactory.hp10.us/artifactory/mario-local/ios/mario_1.1/${BRANCH}/${BUILD}/${zip_name}"
unzip "${zip_name}"

if [ -n "$verbose" ]; then
  tree
  ls -l
fi

# Copy include files and binaries to HPControlledPrint
mkdir -p $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Includes \
         $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Libraries

cp -Rf include/*    $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Includes
cp -Rf libs/*       $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Libraries

if [ -n "$record" ]; then
  echo -n "$BUILD" > "${HOME}/.prep_ios_cpl_${BRANCH}"
fi

