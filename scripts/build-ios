#!/bin/bash -e

test -n "$BUILD_NUMBER" || export BUILD_NUMBER="1"
test -n "$USER"         || export USER="none"

for arg in "$@"; do
  case $arg in

    --release-only) RELEASE_ONLY="1"; shift;;
    --dev)          DEVELOPMENT="1";  shift;;

  esac
done

START_DIR=$(pwd)

# Release full build?
if [ -z "$DEVELOPMENT" ]; then

  # A full build
  $(dirname $0)/build-ios-simulator-debug "$@"
  $(dirname $0)/build-ios-simulator64-debug "$@"
  $(dirname $0)/build-ios-device-debug "$@"

  $(dirname $0)/build-ios-simulator-release "$@"
  $(dirname $0)/build-ios-simulator64-release "$@"
  $(dirname $0)/build-ios-device-release "$@"

else

  # Just enough to debug
  #$(dirname $0)/build-ios-simulator-debug "$@"
  $(dirname $0)/build-ios-simulator64-debug "$@"

fi

# Now package all the arch's into one huge 'fat' file
cd deliveries/ios
mkdir -p fat/debug/libs

if [ -z "$DEVELOPMENT" ]; then

  for lib in `(cd device/debug/libs/; ls; cd ../../..) | egrep -v libcurl`; do
    lipo -output fat/debug/libs/$lib -create device/debug/libs/$lib -arch i386 simulator/debug/libs/$lib -arch x86_64 simulator64/debug/libs/$lib;
  done
  cp $(find . -type f | egrep 'libcurl\.a' | egrep debug | head -1) fat/debug/libs

  mkdir -p fat/release/libs
  for lib in `(cd device/release/libs/; ls; cd ../../..) | egrep -v libcurl`; do
    lipo -output fat/release/libs/$lib -create device/release/libs/$lib -arch i386 simulator/release/libs/$lib -arch x86_64 simulator64/release/libs/$lib;
  done
  cp $(find . -type f | egrep 'libcurl\.a' | egrep release | head -1) fat/release/libs

else

  for lib in `(cd simulator64/debug/libs/; ls; cd ../../..) | egrep -v libcurl`; do
    lipo -output fat/debug/libs/$lib -create -arch x86_64 simulator64/debug/libs/$lib;
  done
  cp $(find . -type f | egrep 'libcurl\.a' | egrep debug | head -1) fat/debug/libs

fi

# Zip it up
cd $START_DIR/deliveries/ios/fat/debug
zip --recurse-paths mwp_sap_cpl-ios-fat-debug_1.1-${BUILD_NUMBER}.zip libs

cd $START_DIR/deliveries
zip --recurse-paths ${START_DIR}/deliveries/ios/fat/debug/mwp_sap_cpl-ios-fat-debug_1.1-${BUILD_NUMBER}.zip include

if [ -z "$DEVELOPMENT" ]; then
  cd $START_DIR/deliveries/ios/fat/release
  zip --recurse-paths mwp_sap_cpl-ios-fat-release_1.1-${BUILD_NUMBER}.zip libs

  cd $START_DIR/deliveries
  zip --recurse-paths ${START_DIR}/deliveries/ios/fat/release/mwp_sap_cpl-ios-fat-release_1.1-${BUILD_NUMBER}.zip include
fi

#mkdir -p $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Includes && cd $_
#cp $START_DIR/deliveries/include/* ./
#
#mkdir -p $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Libraries && cd $_
#cp $START_DIR/deliveries/ios/fat/debug/libs/* ./

# Copy include files and binaries to HPControlledPrint
mkdir -p $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Includes \
         $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Libraries

cp -Rf $START_DIR/deliveries/include/*                    $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Includes

if [ -n "$DEVELOPMENT" ]; then
  cp -Rf $START_DIR/deliveries/ios/fat/debug/libs/*       $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Libraries
else
  cp -Rf $START_DIR/deliveries/ios/fat/release/libs/*     $START_DIR/src/ios/HPControlledPrint/HPControlledPrint/Libraries
fi


cd $START_DIR

